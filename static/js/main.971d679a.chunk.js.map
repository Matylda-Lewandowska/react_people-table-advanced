{"version":3,"sources":["components/Navbar.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/Loader/Loader.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleTable/OrderControl.tsx","components/PeopleTable/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","components/Filters/CenturyFilter.tsx","components/Filters/GenderFilter.tsx","components/Filters/SearchFilter.tsx","components/Filters/PeopleFilters.tsx","components/PeopleTable/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","cn","HomePage","NotFoundPage","Loader","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","OrderControl","sort","currentSort","get","currentOrder","newSort","newOrder","order","handleOrder","PersonItem","person","slug","useParams","sex","name","born","died","mother","motherName","father","fatherName","PeopleTable","people","filteredPeople","gender","query","centuries","getAll","filter","includes","Math","ceil","Number","toLocaleLowerCase","a","b","localeCompare","reverse","displayedPeople","map","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","CenturyFilter","getCenturyParams","century","currentCenturies","num","String","GenderFilter","SearchFilter","setSearchParams","type","placeholder","onChange","event","nextParams","target","PeopleFilters","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","getPeople","catch","finally","length","find","p","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.971d679a.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            People\n          </NavLink>\n\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from '../SearchLink';\n\ntype OrderControlProps = {\n  sort: string;\n};\n\nexport const OrderControl = ({ sort }: OrderControlProps) => {\n  const [searchParams] = useSearchParams();\n\n  const handleOrder = () => {\n    const currentSort = searchParams.get('sort');\n    const currentOrder = searchParams.get('order');\n\n    let newSort: string | null = null;\n    let newOrder: string | null = null;\n\n    if (!currentSort) {\n      newSort = sort;\n    }\n\n    if (currentSort === sort && !currentOrder) {\n      newSort = sort;\n      newOrder = 'desc';\n    }\n\n    return { sort: newSort, order: newOrder };\n  };\n\n  return (\n    <SearchLink params={handleOrder()}>\n      <span className=\"icon\">\n        <i className={cn('fas', {\n          'fa-sort': true,\n          'fa-sort-up': searchParams.get('sort') === sort\n          && !searchParams.get('order'),\n          'fa-sort-down': searchParams.get('sort') === sort\n          && !!searchParams.get('order'),\n        })}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import React from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype PersonItemProps = {\n  person: Person;\n};\n\nexport const PersonItem: React.FC<PersonItemProps> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': person.slug === slug })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}?${searchParams.toString()}`}\n          className={cn({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {!person.mother\n          ? (person.motherName || '-')\n          : (\n            <Link\n              to={`/people/${person.mother?.slug}?${searchParams.toString()}`}\n              className=\"has-text-danger\"\n            >\n              {person.motherName}\n            </Link>\n          )}\n\n      </td>\n      <td>\n        {!person.father\n          ? (person.fatherName || '-')\n          : (\n            <Link\n              to={`/people/${person.father?.slug}?${searchParams.toString()}`}\n            >\n              {person.fatherName}\n            </Link>\n          )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { OrderControl } from './OrderControl';\nimport { PersonItem } from './PersonItem';\n\ntype TableProps = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<TableProps> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n\n  const displayedPeople = () => {\n    let filteredPeople = [...people];\n\n    const gender = searchParams.get('sex');\n    const query = searchParams.get('query');\n    const centuries = searchParams.getAll('centuries');\n\n    filteredPeople = filteredPeople.filter(\n      (person) => {\n        if (gender && person.sex !== gender) {\n          return false;\n        }\n\n        if (centuries\n          && !centuries.includes(\n            (Math.ceil(Number(person.born) / 100)).toString(),\n          )) {\n          return false;\n        }\n\n        if (query\n          && (person.name.toLocaleLowerCase()\n            .includes(query.toLocaleLowerCase())\n          || person.motherName?.toLocaleLowerCase()\n            .includes(query.toLocaleLowerCase())\n          || person.fatherName?.toLocaleLowerCase()\n            .includes(query.toLocaleLowerCase()))) {\n          return true;\n        }\n\n        return true;\n      },\n    );\n\n    const sort = searchParams.get('sort');\n\n    if (sort) {\n      if (sort === 'born' || sort === 'died') {\n        filteredPeople.sort((a, b) => {\n          return a[sort] - b[sort];\n        });\n      }\n\n      if (sort === 'name' || sort === 'sex') {\n        filteredPeople.sort((a, b) => {\n          return a[sort].localeCompare(b[sort]);\n        });\n      }\n    }\n\n    const order = searchParams.get('order');\n\n    if (order) {\n      filteredPeople.reverse();\n    }\n\n    return filteredPeople;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <OrderControl sort=\"name\" />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <OrderControl sort=\"sex\" />\n\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <OrderControl sort=\"born\" />\n\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <OrderControl sort=\"died\" />\n\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {displayedPeople().map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n          />\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from '../SearchLink';\n\nexport const CenturyFilter = () => {\n  const [searchParams] = useSearchParams();\n\n  const handleClass = () => {\n    const centuryParams = searchParams.getAll('centuries').toString();\n\n    return centuryParams;\n  };\n\n  const getCenturyParams = (century: string) => {\n    const currentCenturies = searchParams.getAll('centuries');\n\n    return currentCenturies.includes(century)\n      ? currentCenturies.filter((num) => num !== century)\n      : [String(century), ...searchParams.getAll('centuries')];\n  };\n\n  return (\n    <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n\n      <div className=\"level-right ml-4\">\n\n        <div className=\"level-left\">\n          {[16, 17, 18, 19, 20].map((century) => (\n            <SearchLink\n              key={century}\n              data-cy=\"century\"\n              className={cn('button mr-1', {\n                'is-info': handleClass().includes(century.toString()),\n              })}\n              params={{ centuries: getCenturyParams(String(century)) }}\n            >\n              {century}\n            </SearchLink>\n          ))}\n\n        </div>\n\n        <SearchLink\n          data-cy=\"century\"\n          className={cn('button mr-1', {\n            'is-success': !searchParams.get('centuries'),\n          })}\n          params={{ centuries: null }}\n        >\n          All\n        </SearchLink>\n\n      </div>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from '../SearchLink';\n\nexport const GenderFilter = () => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n\n      <SearchLink\n        className={cn({ 'is-active': !searchParams.get('sex') })}\n        params={{ sex: null }}\n      >\n        All\n      </SearchLink>\n\n      <SearchLink\n        className={cn({ 'is-active': searchParams.get('sex') === 'm' })}\n        params={{ sex: 'm' }}\n      >\n        Male\n      </SearchLink>\n\n      <SearchLink\n        className={cn({ 'is-active': searchParams.get('sex') === 'f' })}\n        params={{ sex: 'f' }}\n      >\n        Female\n      </SearchLink>\n\n    </p>\n\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/searchHelper';\n\nexport const SearchFilter = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  return (\n    <div className=\"panel-block\">\n      <p className=\"control has-icons-left\">\n        <input\n          data-cy=\"NameFilter\"\n          type=\"search\"\n          className=\"input\"\n          placeholder=\"Search\"\n          onChange={(event) => {\n            const nextParams = getSearchWith(searchParams, {\n              query: event.target.value || null,\n            });\n\n            setSearchParams(\n              new URLSearchParams(nextParams),\n            );\n          }}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-search\" aria-hidden=\"true\" />\n        </span>\n      </p>\n    </div>\n  );\n};\n","import { CenturyFilter } from './CenturyFilter';\nimport { GenderFilter } from './GenderFilter';\nimport { SearchLink } from '../SearchLink';\nimport { SearchFilter } from './SearchFilter';\n\nexport const PeopleFilters = () => {\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <GenderFilter />\n\n      <SearchFilter />\n\n      <div className=\"panel-block\">\n        <CenturyFilter />\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            sex: null, centuries: null, query: null, sort: null, order: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleFilters } from '../Filters/PeopleFilters';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    getPeople()\n      .then((response) => setPeople(response))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const preparedPeople = () => {\n    const prepared = people.map(person => {\n      return ({\n        ...person,\n        mother: people\n          .find(p => p.name === person.motherName || null),\n        father: people\n          .find(p => p.name === person.fatherName || null),\n      });\n    });\n\n    return prepared;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && !isError && !!people.length && (\n              <PeopleFilters />\n            )}\n\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {!isLoading && isError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!isLoading && !isError && !people.length && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!isLoading && !isError && !!people.length && (\n                <PeopleTable people={preparedPeople()} />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './components/PeopleTable/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />}>\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}